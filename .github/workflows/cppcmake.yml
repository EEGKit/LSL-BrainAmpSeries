name: C/C++ CI

on:
  push:
    tags:
    - v*.*
    
env:
  LSL_URL: 'https://github.com/sccn/liblsl/releases/tag/'
  LSL_RELEASE_PREFIX: ''
  LSL_TAG: '1.15.2'
  LSL_RELEASE: '1.15.2'
  LSL_RELEASE_SUFFIX: ''
  APP_VERSION: 'v1.17.0'

jobs:
  build:
    runs-on: windows-latest
    strategy:
      matrix:
        platform:
        - Win32
        - Win64

    steps:
    - uses: actions/checkout@v3

    - name: Install Qt32 (Windows)
      uses: jurplel/install-qt-action@v3
      if: matrix.platform == 'Win32'
      with:
        arch: win32_msvc2019
        version: 5.15.0
        
    - name: Install Qt64 (Windows)
      uses: jurplel/install-qt-action@v3
      if: matrix.platform == 'Win64'
      with:
        version: 5.15.0
      
    - name: Get LSL 32
      if: matrix.platform == 'Win32'
      run: |
           Invoke-WebRequest -Uri https://github.com/sccn/liblsl/releases/download/v1.16.2/liblsl-1.16.2-Win_i386.zip -o liblsl.zip
           7z x liblsl.zip -oLSL
    
    - name: Get LSL 64
      if: matrix.platform == 'Win64'
      run: |
           Invoke-WebRequest -Uri https://github.com/sccn/liblsl/releases/download/v1.16.2/liblsl-1.16.2-Win_amd64.zip -o liblsl.zip
           7z x liblsl.zip -oLSL
     
    - name: configure cmake 32
      if: matrix.platform == 'Win32'
      run: |
           cmake -S . -B build -Dlsl_DIR=LSL/share/LSL -A Win32
           
    - name: configure cmake 64
      if: matrix.platform == 'Win64'
      run: |
           cmake -S . -B build -Dlsl_DIR=LSL/share/LSL -A x64
        
    - name: make
      run: |
           cmake --build build --config Release -j --target install
           
    - name: package
      run: |
           cmake --build build --config Release -j --target bundle

    - name: Upload Artifacts
      uses: actions/upload-artifact@v3-preview
      with:
        name: pkg-${{ matrix.platform }}
        path: |
            build/*.zip
            build/*.exe

    
    
  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
    
    - name: Download Artifacts
      if: startsWith(github.ref, 'refs/tags/')
      uses: actions/download-artifact@v2-preview
      # By not specifying with: name:, it defaults to downloading all artifacts.

    - name: Create Release
      if: startsWith(github.ref, 'refs/tags/')
      id: create_release
      uses: softprops/action-gh-release@v1
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        # tag_name: ${{ github.ref }}  # ${{ github.ref }} is default
        name: Release ${{ github.ref }}
        draft: false
        prerelease: false
        # body_path: CHANGELOG.txt
        files: pkg-*/*